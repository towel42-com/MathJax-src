(()=>{"use strict";var t={d:(e,a)=>{for(var o in a)t.o(a,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:a[o]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{BbmConfiguration:()=>M,BbmMethods:()=>c});const a=("undefined"!=typeof window?window:global).MathJax._.components.global,o=(a.GLOBAL,a.isObject,a.combineConfig,a.combineDefaults),n=a.combineWithMathJax,b=(a.MathJax,MathJax._.input.tex.HandlerTypes),r=b.ConfigurationType,i=b.HandlerType,s=MathJax._.input.tex.Configuration,m=s.Configuration,d=(s.ConfigurationHandler,s.ParserConfiguration,MathJax._.input.tex.TokenMap),l=(d.parseResult,d.AbstractTokenMap,d.RegExpMap,d.AbstractParseMap,d.CharacterMap,d.DelimiterMap,d.MacroMap,d.CommandMap),h=(d.EnvironmentMap,MathJax._.input.tex.base.BaseMethods),p=(h.splitAlignArray,h.default),c={ChooseFont(t,e,a,o){p.MathFont(t,e,t.options.bbm.bold?o:a)},ChangeBold(t,e){const a=t.GetArgument(e);t.options.bbm.bold="bold"===a},MathFont:p.MathFont};new l("bbm",{mathversion:c.ChangeBold,mathbbm:[c.ChooseFont,"-bbm-normal","-bbm-bold"],mathbbmss:[c.ChooseFont,"-bbm-sans-serif","-bbm-sans-serif-bold"],mathbbmtt:[c.MathFont,"-bbm-monospace"]});const M=m.create("bbm",{[r.HANDLER]:{[i.MACRO]:["bbm"]},[r.OPTIONS]:{bbm:{bold:!1}}});MathJax.loader&&MathJax.loader.checkVersion("[tex]/bbm","4.0.0","tex-extension"),n({_:{bbm:{BbmConfiguration:e}}});const x=MathJax._.util.context,u=x.hasWindow;x.context;!function(t,e,a=`@mathjax/${e}`){if(MathJax.loader){const n=u?`https://cdn.jsdelivr.net/npm/${a}`:a,b=e.replace(/-font-extension$/,"-extension"),r=MathJax.config?.startup?.output||"chtml";o(MathJax.config.loader,"paths",{[b]:n}),o(MathJax.config.loader,"dependencies",{[`[${b}]/${r}`]:[`output/${r}`]}),MathJax.loader.addPackageData(t,{extraLoads:[`[${b}]/${r}`],rendererExtensions:[b]})}}("[tex]/bbm","mathjax-bbm-font-extension")})();